// Code generated by "stringer -type=Number"; DO NOT EDIT.

package state

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NumberStart-1]
	_ = x[NumberSign-2]
	_ = x[NumberZero-3]
	_ = x[NumberInteger-4]
	_ = x[NumberFractionSymol-5]
	_ = x[NumberFraction-6]
	_ = x[NumberExponentSymbol-7]
	_ = x[NumberExponentSign-8]
	_ = x[NumberExponent-9]
	_ = x[NumberEnd-10]
}

const _Number_name = "NumberStartNumberSignNumberZeroNumberIntegerNumberFractionSymolNumberFractionNumberExponentSymbolNumberExponentSignNumberExponentNumberEnd"

var _Number_index = [...]uint8{0, 11, 21, 31, 44, 63, 77, 97, 115, 129, 138}

func (i Number) String() string {
	i -= 1
	if i >= Number(len(_Number_index)-1) {
		return "Number(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Number_name[_Number_index[i]:_Number_index[i+1]]
}
